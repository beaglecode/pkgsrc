# $NetBSD: Makefile,v 1.7 2013/02/25 17:25:10 christos Exp $

# Note: Regen distinfo with PKG_DEFAULT_OPTIONS+=sun-jre-jce
# Note: Update DOWNLOAD_NAME when you update the JRE version
# Note: This needs to be kept in sync with the sun-jdk7 package
# Note: If you make makesum, make sure that you include both archs in distinfo

DISTNAME=	jre-7u15-linux-${DIST_ARCH}
PKGNAME=	sun-jre7-7.0.15
EXTRACT_OPTS=-f tar
EXTRACT_SUFX=.gz
MASTER_SITES=	# empty

LICENSE=	oracle-binary-code-license

DOWNLOAD_NAME=	Java Runtime Environment (JRE) 7u15

USE_TOOLS+=	pax

WRKSRC=		${WRKDIR}/jre1.7.0_15
JAVA_WRAPPERS=	java javaws keytool orbd policytool rmid rmiregistry \
		servertool tnameserv
REQD_DIRS=	${JAVA_HOME}
REQD_DIRS+=	${JAVA_HOME}/lib
REQD_DIRS+=	${JAVA_HOME}/lib/applet
REQD_DIRS+=	${JAVA_HOME}/lib/images
REQD_DIRS+=	${JAVA_HOME}/lib/images/cursors
REQD_DIRS+=	${JAVA_HOME}/lib/security
CONF_FILES=	# empty

.include "../../lang/sun-jre7/Makefile.common"

SFILES_MK=sfiles-${EMUL_OPSYS}-${EMUL_ARCH}.mk

.sinclude "${SFILES_MK}"

.for file in ${SFILES}
CONF_FILES+=	${JAVA_HOME}/lib/${file}.default ${JAVA_HOME}/lib/${file}
.endfor

CHECK_FILES_SKIP+=	${JAVA_HOME}/lib/${JAVA_ARCH}/client/classes.jsa
CHECK_SHLIBS_SUPPORTED=	NO

PKG_OPTIONS_VAR=	PKG_OPTIONS.sun-jre7
PKG_SUPPORTED_OPTIONS=	sun-jre-jce

.include "../../mk/bsd.options.mk"

PLIST_SRC=	PLIST.linux-${EMUL_ARCH}

PLIST_VARS+=	jce native
.if !empty(PKG_OPTIONS:Msun-jre-jce)
DISTFILES=	${DISTNAME}${EXTRACT_SUFX} UnlimitedJCEPolicyJDK7.zip
PLIST.jce=	yes
FETCH_MESSAGE+=	""
FETCH_MESSAGE+=	"As sun-jre-jce is enabled UnlimitedJCEPolicyJDK7.zip is also needed"
.endif

# Some of the binaries require libX11, so ensure that requirement is
# satisfied when the package is installed on the native OS.
#
.if defined(EMUL_IS_NATIVE)
.  if ${X11_TYPE} == "native"
X11_LIBDIR=	${X11BASE}/lib${LIBABISUFFIX}
.    if ${_OPSYS_SHLIB_TYPE} == "dylib"
X11_LIB=${X11_LIBDIR}/libX11.dylib
.    else
X11_LIB=${X11_LIBDIR}/libX11.so.6
.    endif
.    if !exists(${X11_LIB})
PKG_FAIL_REASON+=	"${X11_LIB} does not exist.  Please install the" \
			"X11 library packages for your system."
.    endif
.  else
.  include "../../x11/libX11/buildlink3.mk"
.  include "../../x11/libXext/buildlink3.mk"
.  include "../../x11/libXi/buildlink3.mk"
.  include "../../x11/libXt/buildlink3.mk"
.  include "../../x11/libXtst/buildlink3.mk"
X11_LIBDIR=	${X11BASE}/lib
.  endif

.  if ${EMUL_OPSYS} == "linux"
.    include "../../audio/alsa-lib/buildlink3.mk"
ALSA_LIBDIR=	${BUILDLINK_PREFIX.alsa-lib}/${BUILDLINK_LIBDIRS.alsa-lib}

.    include "../../databases/unixodbc/buildlink3.mk"
ODBC_LIBDIR=	${BUILDLINK_PREFIX.unixodbc}/${BUILDLINK_LIBDIRS.unixodbc}
.  endif

ARCH_LIBDIR=	${JAVA_HOME}/lib/${JAVA_ARCH}
.PHONY: create-library-symlinks
post-install: create-library-symlinks
create-library-symlinks:
	${RUN}${LN} -fs ${X11_LIBDIR}/libX11.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libX11.so.6 ${DESTDIR}${ARCH_LIBDIR}/jli
	${RUN}${LN} -fs ${X11_LIBDIR}/libXext.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libXi.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libXt.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${X11_LIBDIR}/libXtst.so.6 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${ALSA_LIBDIR}/libasound.so.2 ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${ODBC_LIBDIR}/libodbc.so ${DESTDIR}${ARCH_LIBDIR}
	${RUN}${LN} -fs ${ODBC_LIBDIR}/libodbcinst.so ${DESTDIR}${ARCH_LIBDIR}

PLIST.native=	yes
.endif

post-extract:
	${MKDIR} ${WRKSRC}/.systemPrefs
	${TOUCH} ${WRKSRC}/.systemPrefs/.system.lock
	${TOUCH} ${WRKSRC}/.systemPrefs/.systemRootModFile

do-configure:
	cd ${WRKSRC}/lib; for file in ${SFILES}; do			\
		${MV} -f $$file $$file.default;				\
	done

pre-install:
	# This file is generated the *first* time the package is built on a box
	${RM} -f ${WRKSRC}/lib/servicetag/registration.xml
.if !empty(PKG_OPTIONS:Msun-jre-jce)
	cd ${WRKDIR}/UnlimitedJCEPolicy ; pax -rw -pe -v . ${WRKSRC}/lib/security
.endif

#
# re-create sfiles.mk from properties and config files
#
makesfiles:	extract
	${ECHO} >  ${SFILES_MK:Q} '#	$$Net''BSD$$'
	${ECHO} >> ${SFILES_MK:Q} '#'
	${ECHO} >> ${SFILES_MK:Q} '# Created with "make makesfiles"'
	${ECHO} >> ${SFILES_MK:Q} '# Do not edit this file manually!'
	${ECHO} >> ${SFILES_MK:Q} '#'
	cd ${WRKSRC}/lib && ${FIND} * -name fontconfig.\* -o		\
		-name \*.properties -o -name \*.properties.\?\? -o	\
		-name \*.cfg -o -name \*.security |			\
	${SED} 's/^/SFILES+=	/' >> ${PKGDIR}/${SFILES_MK:Q}

.include "../../mk/bsd.pkg.mk"
