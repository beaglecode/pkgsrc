$NetBSD: patch-ab,v 1.2 2012/12/25 21:11:12 joerg Exp $

--- src/guile-fcgi.c.orig	2001-03-25 13:34:54.000000000 +0000
+++ src/guile-fcgi.c
@@ -43,11 +43,11 @@
 /****************************************************************************/
 
 static long tagFCGX_Stream;
-#define SCM_FCGX_STREAMP(smob) (SCM_NIMP(smob) && SCM_CAR(smob)==tagFCGX_Stream)
+#define SCM_FCGX_STREAMP(smob) (SCM_NIMP(smob) && (long)(SCM_CAR(smob))==tagFCGX_Stream)
 #define SCM_FCGX_STREAM(smob) ((FCGX_Stream*)SCM_CDR(smob))
 
 static long tagFCGX_Request;
-#define SCM_FCGX_REQUESTP(smob) (SCM_NIMP(smob) && SCM_CAR(smob)==tagFCGX_Request)
+#define SCM_FCGX_REQUESTP(smob) (SCM_NIMP(smob) && (long)(SCM_CAR(smob))==tagFCGX_Request)
 #define SCM_FCGX_REQUEST(smob) (FCGX_Request*)SCM_CDR(smob)
 
 long fcgi_ptype=0;
@@ -524,7 +524,7 @@ SCM_DEFINE (scm_FCGX_FFlush,"FCGX:FFlush
 {
   SCM_ASSERT((SCM_FCGX_STREAMP(stream)), stream, SCM_ARG1, s_scm_FCGX_FFlush);
 
-  return (-1==FCGX_FFlush(SCM_FCGX_STREAM(stream)));
+  return (void*)(-1==FCGX_FFlush(SCM_FCGX_STREAM(stream)));
 }
 /*DLLAPI int FCGX_FClose(FCGX_Stream *stream);*/
 SCM_DEFINE (scm_FCGX_FClose,"FCGX:FClose",1,0,0,
@@ -544,7 +544,7 @@ SCM_DEFINE (scm_FCGX_FClose,"FCGX:FClose
 {
   SCM_ASSERT((SCM_FCGX_STREAMP(stream)), stream, SCM_ARG1, s_scm_FCGX_FClose);
 
-  return (-1==FCGX_FClose(SCM_FCGX_STREAM(stream)));
+  return (void*)(-1==FCGX_FClose(SCM_FCGX_STREAM(stream)));
 }
 /*DLLAPI int FCGX_GetError(FCGX_Stream *stream);*/
 SCM_DEFINE (scm_FCGX_GetError,"FCGX:GetError",1,0,0,
@@ -587,7 +587,7 @@ static char** saved_environ=NULL;
 static SCM scm_fcgi_make_port(SCM st);
 static SCM scm_fcgi_finish();
 
-inline SCM
+static inline SCM
 fcgi_make_stream(FCGX_Stream* stream)
 {
   SCM_RETURN_NEWSMOB(tagFCGX_Stream,stream);
@@ -702,7 +702,7 @@ fcgi_port_flush(SCM port){
 
 static SCM
 fcgi_port_mark(SCM port){
-  scm_gc_mark (SCM_STREAM(port));
+  scm_gc_mark ((void*)SCM_STREAM(port));
   return SCM_BOOL_F;
 }
 
@@ -842,12 +842,12 @@ SCM_DEFINE (scm_fcgi_make_stream,"fcgi:m
           (SCM port),"")
 {
   SCM_ASSERT(SCM_PORTP(port) && 
-	  ((SCM_CAR(port) & fcgi_ptype)==fcgi_ptype),
+	  (((long)SCM_CAR(port) & fcgi_ptype)==fcgi_ptype),
 	  port,
 	  SCM_ARG1,
 	  s_scm_fcgi_make_stream);
 
-  return SCM_STREAM(port);
+  return (void*)SCM_STREAM(port);
 }
 
 void
